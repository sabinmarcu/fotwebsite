{
  "author": {
    "name": "Franklin van de Meent",
    "email": "fr@nkl.in",
    "url": "http://frankl.in"
  },
  "name": "mollie",
  "description": "Access the Mollie API (http://mollie.nl)",
  "version": "0.1.0",
  "homepage": "http://fvdm.github.com/nodejs-mollie/",
  "repository": {
    "type": "git",
    "url": "git://github.com/fvdm/nodejs-mollie.git"
  },
  "bugs": {
    "url": "https://github.com/fvdm/nodejs-mollie/issues"
  },
  "main": "mollie.js",
  "dependencies": {
    "node-xml2json": ">=1.0.0 <2.0.0"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "tags": [
    "mollie",
    "api",
    "sms",
    "ideal"
  ],
  "readme": "nodejs-mollie\n=============\n\nNode.js module to access the [Mollie](https://www.mollie.nl/) API.\n\n## Dependencies\n\n* [node-xml2json](http://search.npmjs.org/#/node-xml2json) ([github](https://github.com/Kenshin/node-xml2json/)) - This xml2json module is very light and fast.\n\n## Installation\n\nInstallation is straightforward with NPM, this will take care of any dependencies. The release on NPM is always the latest stable version.\n\n```\nnpm install mollie\n```\n\n## Usage\n\n### Setup\n\nTo use account specific functions you need to specify your credentials in the **api** var. In your [account settings](https://www.mollie.nl/beheer/sms-diensten/instellingen/) you can set a password for the HTTP-API that can be different from your regular password. Communication with the API is always over HTTPS. The **api** setting takes these elements:\n\n* **partnerid** - customer ID, required for payments ([lookup](https://www.mollie.nl/beheer/account/))\n\n* **username** - your account username\n\n* **password** - your account or HTTP-API password\n\n### Hello world:\n\nBelow is a very basic example, including setup and call.\n\n```js\nvar mollie = require('mollie')\n\n// account credentials\nmollie.api.partnerid = 1234\nmollie.api.username = 'yourname'\nmollie.api.password = 'yourapipass'\n\n// get remaining credits\nmollie.credits( console.log )\n```\n\nOutput:\n\n```js\n{ type: 'credits',\r\n  resultcode: 10,\r\n  resultmessage: 'Credits available.',\r\n  credits: 58.85,\r\n  euro: 0 }\n```\n\nOr in case of an error\n\n```js\n{ type: 'credits',\r\n  resultcode: 30,\r\n  resultmessage: 'Incorrect username or password.',\r\n  credits: 0,\r\n  euro: 0 }\n```\n\n### Load from source\n\nTo load the module directly from sourcecode, require the module like this:\n\n```js\nvar mollie = require('/path/to/mollie.js');\n```\n\n## mollie.credits\n\nGet remaining account credits\n\n```js\nmollie.credits( console.log )\n```\n```js\n{ type: 'credits',\r\n  resultcode: 10,\r\n  resultmessage: 'Credits available.',\r\n  credits: 58.85,\r\n  euro: 0 }\n```\n\n## mollie.hlr\n\n**HLR-lookup (Network Query)**\n\nRequest the MNC network code for a number. A complete list with the codes can be found at [Wikipedia](http://en.wikipedia.org/wiki/Mobile_Network_Code). The response will be pushed to your HLR report URL as provided on your [SMS settings page](https://www.mollie.nl/beheer/sms-diensten/instellingen/).\n\n* **reference** - your internal reference ID for this lookup, will be included in the report callback.\n\n* **recipients** - the number to lookup in international format, digits only. Although the name is plural, provide only **one** number for each call.\n\n```js\nmollie.hlr(\n\t{\n\t\trecipients: 31612345678,\n\t\treference:  'lookup123'\n\t},\n\tconsole.log\n)\n```\n\nOutput:\n\n```js\n{ type: 'sms',\r\n  recipients: 1,\r\n  success: 'true',\r\n  resultcode: 10,\r\n  resultmessage: 'Network query sent.' }\r\n```\n\n## mollie.sms\n\nSend a normal or premium SMS to one or many recipients at once.\n\nSee the [API documentation](https://www.mollie.nl/beheer/sms-diensten/documentatie/sms/http/en/?s=premium) for details.\n\n```js\nmollie.sms(\n\t{\n\t\toriginator: 'MyApp',\n\t\trecipients: '31612345678,31687654321',\n\t\tmessage:    'Hello world',\n\t\tgateway:\t1,\n\t\treference:\t'abc123'\n\t},\n\tconsole.log\n)\n```\n\nOutput:\n\n```js\n{ type: 'sms',\r\n  recipients: 2,\r\n  success: 'true',\r\n  resultcode: 10,\r\n  resultmessage: 'Message successfully sent.' }\n```\n\n## iDEAL\n\nMollie provides a simple streamlined method for handling iDEAL payments. For this to work you need to an active payment profile. See the [API documentation](https://www.mollie.nl/beheer/betaaldiensten/documentatie/ideal/en/) for all the details and variables.\n\n## mollie.ideal.banklist\n\nOn your payment page you first need to let the customer choose his bank.\n\n**mollie.ideal.banklist ( [testmode], callback )**\n\n* **testmode** - optional - **true**: returns a test-bank, all transactions are fake. **false**: returns real banks, all transactions are real with real money. The *default* is what you set on your account [iDEAL API testmode](https://www.mollie.nl/beheer/betaaldiensten/instellingen/) settings.\n\n* **callback** - required - your callback function\n\n###### Testmode enabled:\n\n```js\nmollie.ideal.banklist( true, console.log );\n```\n\n```js\n{ '9999': { bank_id: 9999, bank_name: 'TBM Bank' } }\n```\n\nThe key is the same as **bank_id**, this allows you to do quick reverse lookups.\n\n\n###### Testmode disabled:\n\n```js\nmollie.ideal.banklist( console.log );\n```\n\n```js\n{ '17': { bank_id: 17, bank_name: 'Rabobank' },\r\n  '25': { bank_id: 25, bank_name: 'ABN AMRO' },\r\n  '91': { bank_id: 91, bank_name: 'Friesland Bank' },\r\n  '113': { bank_id: 113, bank_name: 'van Lanschot' },\r\n  '329': { bank_id: 329, bank_name: 'Triodos Bank' },\r\n  '465': { bank_id: 465, bank_name: 'ING' },\r\n  '489': { bank_id: 489, bank_name: 'SNS Bank' },\r\n  '497': { bank_id: 497, bank_name: 'ASN Bank' },\r\n  '505': { bank_id: 505, bank_name: 'RegioBank' } }\r\n```\n\n## mollie.ideal.payment\n\nCreate an iDEAL payment.\n\n```js\nmollie.ideal.payment(\n\t{\n\t\tamount:\t\t\t2000,\n\t\tbank_id:\t\t9999,\n\t\tdescription:\t'Invoice 20120012345',\n\t\treporturl:\t\t'http://myapp.tld/mollie/ideal',\n\t\treturnurl:\t\t'http://myapp.tld/ideal/complete'\n\t},\n\tconsole.log\n)\t\t\n```\n\n```js\n{ order: \r\n   { transaction_id: 'abcxyz',\r\n     amount: 2000,\r\n     currency: 'EUR',\r\n     url: 'http://www.mollie.nl/partners/ideal-test-bank?order_nr=M0040123&amp;transaction_id=abcdef&amp;trxid=M0040123',\r\n     message: 'Your iDEAL-payment has successfully been setup. Your customer should visit the given URL to make the payment' } }\n```\n\n## mollie.ideal.check\n\nWhen the customer completes the payment the API will make a call on your **reporturl** with the **transaction_id** as **GET** argument. Then you can check the payment status **ONCE** with **mollie.ideal.check**. In the meantime the customer will be redirected to your **returnurl** and bring the **transaction_id** too, for cross-referencing.\n\n* **testmode** - optional - set to *true* when using the TMB Bank (ID 9999).\n\n* **transaction_id** - required - the transaction ID to check\n\n```js\nmollie.ideal.check(\n\t{\n\t\ttestmode:\t\ttrue,\n\t\ttransaction_id:\t'abcxyz'\n\t},\n\tconsole.log\n)\t\t\n```\n\n```js\n{ order: \r\n   { transaction_id: 'abcxyz',\r\n     amount: 2000,\r\n     currency: 'EUR',\r\n     payed: 'true',\r\n     consumer: \r\n      { consumername: 'T. TEST',\r\n        consumeraccount: 123456789,\r\n        consumercity: 'Testdorp' },\r\n     message: 'This iDEAL-order has successfuly been payed for, and this is the first time you check it.',\r\n     status: 'Success' } }\n```\n\nThe variable **payed** can be **true** only once, for security.\n\n## mollie.ideal.paymentLink\n\nGenerate an iDEAL payment link to redirect the customer to. This is useful for emails and such. This way Mollie will take care of the banklist, payment creation and confirmation.\n\n```js\nmollie.ideal.paymentLink(\n\t{\n\t\tamount:\t\t\t2000,\n\t\tdescription:\t'Invoice 20120012345'\n\t},\n\tconsole.log\n)\n```\n\n```js\n{ link: \r\n   { url: 'https://secure.mollie.nl/pay/ideal/123-12ab3456/2000_Invoice_20120012345/abcxyz',\r\n     message: 'Your iDEAL-link has been successfully setup. Your customer should visit the given URL to make the payment.' } }\n```\n\nYou get the payment status by email.\n\n## License\n\nThis code is **COPYLEFT** meaning you can do anything you like, except copyrighting it. It would be nice to refer back to the source in your code, for future reference:\n\nhttps://github.com/fvdm/nodejs-mollie/",
  "readmeFilename": "README.md",
  "_id": "mollie@0.1.0",
  "_shasum": "96c97603e12618b99d4dd59ec122fdc24df28e6f",
  "_from": "mollie@^0.1.0",
  "_resolved": "https://registry.npmjs.org/mollie/-/mollie-0.1.0.tgz"
}
