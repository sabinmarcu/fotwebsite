// Generated by CoffeeScript 1.7.1
(function() {
  var IS, chai, obj,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  IS = require("./../lib/isf.js");

  chai = require("chai");

  obj = IS.Object.clone();

  chai.should();

  describe("Error Reporter", function() {
    it("Should extend right", function() {
      var item;
      item = (function(_super) {
        __extends(item, _super);

        function item() {
          return item.__super__.constructor.apply(this, arguments);
        }

        item.extend(IS.ErrorReporter);

        return item;

      })(obj);
      return (typeof item.generate).should.equal("function");
    });
    it("Should get the properties right", function() {
      var item2;
      item2 = (function(_super) {
        __extends(item2, _super);

        function item2() {
          return item2.__super__.constructor.apply(this, arguments);
        }

        item2.errors = {
          "Chestie": ["There is no space", "No more jizz"],
          "Naspa": ["Need more potassium", "Need Viagra"]
        };

        item2.extend(IS.ErrorReporter);

        return item2;

      })(obj);
      item2._indices.should.contain("An unknown error has occurred");
      item2._indices.should.contain("There is no space");
      item2._indices.should.contain("No more jizz");
      item2._indices.should.contain("Need more potassium");
      item2._indices.should.contain("Need Viagra");
      item2._errors.should.have.property("Unknown Error");
      item2._errors.should.have.property("Chestie");
      return item2._errors.should.have.property("Naspa");
    });
    it("Should generate errors properly", function() {
      var error0, error1, error2, error3, error4, error5, item2;
      item2 = (function(_super) {
        __extends(item2, _super);

        function item2() {
          return item2.__super__.constructor.apply(this, arguments);
        }

        item2.errors = {
          "Penis": ["No more Viagra", "Need potassium", "No banana for you"],
          "Vagina": ["Need a dildo", "No more wine"]
        };

        item2.extend(IS.ErrorReporter);

        return item2;

      })(obj);
      error0 = item2.generate(0);
      error1 = item2.generate(1);
      error2 = item2.generate(2);
      error3 = item2.generate(3);
      error4 = item2.generate(4);
      error5 = item2.generate(5);
      error0.name.should.equal("Unknown Error");
      error1.name.should.equal("Penis");
      error2.name.should.equal("Penis");
      error3.name.should.equal("Penis");
      error4.name.should.equal("Vagina");
      error5.name.should.equal("Vagina");
      error0.message.should.equal("An unknown error has occurred");
      error1.message.should.equal("No more Viagra");
      error2.message.should.equal("Need potassium");
      error3.message.should.equal("No banana for you");
      error4.message.should.equal("Need a dildo");
      error5.message.should.equal("No more wine");
      return (item2.generate(3, "Stuff is fucked up!")).message.should.equal("No banana for you - Extra Data : Stuff is fucked up!");
    });
    return it("Should return correct texts", function() {
      var error0, error1, error2, error3, error4, error5, item2;
      item2 = (function(_super) {
        __extends(item2, _super);

        function item2() {
          return item2.__super__.constructor.apply(this, arguments);
        }

        item2.errors = {
          "Penis": ["No more Viagra", "Need potassium", "No banana for you"],
          "Vagina": ["Need a dildo", "No more wine"]
        };

        item2.extend(IS.ErrorReporter);

        return item2;

      })(obj);
      error0 = item2.generate(0);
      error1 = item2.generate(1);
      error2 = item2.generate(2);
      error3 = item2.generate(3);
      error4 = item2.generate(4);
      error5 = item2.generate(5);
      (error0.toString()).should.equal("[Unknown Error] An unknown error has occurred |0|");
      (error1.toString()).should.equal("[Penis] No more Viagra |1|");
      (error2.toString()).should.equal("[Penis] Need potassium |2|");
      (error3.toString()).should.equal("[Penis] No banana for you |3|");
      (error4.toString()).should.equal("[Vagina] Need a dildo |4|");
      return (error5.toString()).should.equal("[Vagina] No more wine |5|");
    });
  });

}).call(this);
